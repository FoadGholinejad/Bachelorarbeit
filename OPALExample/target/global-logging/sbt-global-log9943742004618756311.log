[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\salaz\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\salaz\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Oracle Corporation Java 11.0.1)
[debug]       Load.loadUnit: plugins took 156.8101ms
[debug]       Load.loadUnit: defsScala took 0.3284ms
[debug] [Loading] Scanning directory C:\Users\salaz\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\salaz\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.6414 ms
[debug]           Load.resolveProject(global-plugins) took 45.2038ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\salaz\.sbt\1.0\plugins, plugins: List(<none>))) took 96.6697ms
[debug] [Loading] Done in C:\Users\salaz\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 124.864ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2326ms
[debug]     Load.loadUnit(file:/C:/Users/salaz/.sbt/1.0/plugins/, ...) took 291.2943ms
[debug]   Load.apply: load took 506.0359ms
[debug]   Load.apply: resolveProjects took 6.6843ms
[debug]   Load.apply: finalTransforms took 64.5047ms
[debug]   Load.apply: config.delegates took 9.2889ms
[debug]   Load.apply: Def.make(settings)... took 429.6881ms
[debug]   Load.apply: structureIndex took 92.5411ms
[debug]   Load.apply: mkStreams took 1.9067ms
[info] loading global plugins from C:\Users\salaz\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2480.7422ms
[debug]           Load.loadUnit: plugins took 18.2529ms
[debug]           Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\Users\salaz\Desktop\OPALExample\project
[debug]             Load.loadUnit: mkEval took 10.6362ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\salaz\Desktop\OPALExample\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2325 ms
[info] loading settings for project opalexample-build from idea.sbt...
[debug]               Load.resolveProject(opalexample-build) took 4.6304ms
[debug]             Load.loadTransitive: finalizeProject(Project(id opalexample-build, base: C:\Users\salaz\Desktop\OPALExample\project, plugins: List(<none>))) took 7.6324ms
[debug] [Loading] Done in C:\Users\salaz\Desktop\OPALExample\project, returning: (opalexample-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 178.358ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5549ms
[debug]         Load.loadUnit(file:/C:/Users/salaz/Desktop/OPALExample/project/, ...) took 203.1577ms
[debug]       Load.apply: load took 204.9532ms
[debug]       Load.apply: resolveProjects took 0.2215ms
[debug]       Load.apply: finalTransforms took 11.1623ms
[debug]       Load.apply: config.delegates took 0.4563ms
[debug]       Load.apply: Def.make(settings)... took 103.8913ms
[debug]       Load.apply: structureIndex took 36.5342ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\salaz\Desktop\OPALExample\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 760.0617ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\salaz\Desktop\OPALExample
[debug]       Load.loadUnit: mkEval took 0.3948ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1299 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 29.8504ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\salaz\Desktop\OPALExample, plugins: List(<none>))) took 33.109ms
[debug] [Loading] Done in C:\Users\salaz\Desktop\OPALExample, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 100.9802ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.7291ms
[debug]   Load.loadUnit(file:/C:/Users/salaz/Desktop/OPALExample/, ...) took 863.4719ms
[debug] Load.apply: load took 865.2464ms
[debug] Load.apply: resolveProjects took 0.1149ms
[debug] Load.apply: finalTransforms took 30.0796ms
[debug] Load.apply: config.delegates took 0.3718ms
[debug] Load.apply: Def.make(settings)... took 78.6708ms
[debug] Load.apply: structureIndex took 29.5412ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to OPALExample (in build file:/C:/Users/salaz/Desktop/OPALExample/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * ThisBuild / version
[warn]   +- C:\Users\salaz\Desktop\OPALExample\build.sbt:1
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
