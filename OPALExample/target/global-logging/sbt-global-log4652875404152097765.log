[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\salaz\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\salaz\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Oracle Corporation Java 11.0.1)
[debug]       Load.loadUnit: plugins took 173.3145ms
[debug]       Load.loadUnit: defsScala took 0.488499ms
[debug] [Loading] Scanning directory C:\Users\salaz\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\salaz\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.3015 ms
[debug]           Load.resolveProject(global-plugins) took 73.6183ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\salaz\.sbt\1.0\plugins, plugins: List(<none>))) took 145.884899ms
[debug] [Loading] Done in C:\Users\salaz\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 179.282199ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2373ms
[debug]     Load.loadUnit(file:/C:/Users/salaz/.sbt/1.0/plugins/, ...) took 368.8502ms
[debug]   Load.apply: load took 620.717699ms
[debug]   Load.apply: resolveProjects took 7.4805ms
[debug]   Load.apply: finalTransforms took 67.7325ms
[debug]   Load.apply: config.delegates took 5.6638ms
[debug]   Load.apply: Def.make(settings)... took 412.5644ms
[debug]   Load.apply: structureIndex took 111.681ms
[debug]   Load.apply: mkStreams took 2.196101ms
[info] loading global plugins from C:\Users\salaz\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2671.235199ms
[debug]           Load.loadUnit: plugins took 32.187ms
[debug]           Load.loadUnit: defsScala took 0.005301ms
[debug] [Loading] Scanning directory C:\Users\salaz\Desktop\OPALExample\project
[debug]             Load.loadUnit: mkEval took 11.4003ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\salaz\Desktop\OPALExample\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7122 ms
[info] loading settings for project opalexample-build from idea.sbt...
[debug]               Load.resolveProject(opalexample-build) took 5.2674ms
[debug]             Load.loadTransitive: finalizeProject(Project(id opalexample-build, base: C:\Users\salaz\Desktop\OPALExample\project, plugins: List(<none>))) took 7.578299ms
[debug] [Loading] Done in C:\Users\salaz\Desktop\OPALExample\project, returning: (opalexample-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2492.8728ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.413699ms
[debug]         Load.loadUnit(file:/C:/Users/salaz/Desktop/OPALExample/project/, ...) took 2531.7777ms
[debug]       Load.apply: load took 2533.513ms
[debug]       Load.apply: resolveProjects took 0.115401ms
[debug]       Load.apply: finalTransforms took 9.644499ms
[debug]       Load.apply: config.delegates took 0.405ms
[debug]       Load.apply: Def.make(settings)... took 74.3868ms
[debug]       Load.apply: structureIndex took 30.6535ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\salaz\Desktop\OPALExample\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3902.6396ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\salaz\Desktop\OPALExample
[debug]       Load.loadUnit: mkEval took 0.3247ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3362 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 27.8971ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\salaz\Desktop\OPALExample, plugins: List(<none>))) took 31.7085ms
[debug] [Loading] Done in C:\Users\salaz\Desktop\OPALExample, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1367.3605ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.6079ms
[debug]   Load.loadUnit(file:/C:/Users/salaz/Desktop/OPALExample/, ...) took 5282.1689ms
[debug] Load.apply: load took 5283.8865ms
[debug] Load.apply: resolveProjects took 0.1355ms
[debug] Load.apply: finalTransforms took 30.892899ms
[debug] Load.apply: config.delegates took 0.3398ms
[debug] Load.apply: Def.make(settings)... took 69.1963ms
[debug] Load.apply: structureIndex took 31.2689ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to OPALExample (in build file:/C:/Users/salaz/Desktop/OPALExample/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * ThisBuild / version
[warn]   +- C:\Users\salaz\Desktop\OPALExample\build.sbt:1
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
